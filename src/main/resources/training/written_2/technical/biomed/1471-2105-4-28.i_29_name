
  
    
      
        Background
        
          Back propagation <ENAMEX TYPE="ORGANIZATION">NN</ENAMEX> (BPNN)
          The back propagation <ENAMEX TYPE="ORGANIZATION">NN</ENAMEX> (BPNN) is one of the most
          commonly usedNN [ <TIMEX TYPE="DATE">22</TIMEX> ] and is the <ENAMEX TYPE="ORGANIZATION">NNchosen</ENAMEX> for many
          <ENAMEX TYPE="ORGANIZATION">genetic epidemiology</ENAMEX> studies [ <NUMEX TYPE="CARDINAL">4 5 6 7 8 9 10 11 12</NUMEX> ] .In
          this study, we used a traditional fully-connected,
          feed-<ENAMEX TYPE="PER_DESC">forwardnetwork</ENAMEX> comprised of <NUMEX TYPE="CARDINAL">one</NUMEX> input layer, <NUMEX TYPE="CARDINAL">zero</NUMEX>,
          <NUMEX TYPE="CARDINAL">one</NUMEX>, or two hidden layers,and one output layer, trained
          by back propagation. The softwareused, the <ENAMEX TYPE="ORGANIZATION">NICO</ENAMEX> toolkit,
          was developed at the <ENAMEX TYPE="ORGANIZATION">Royal Institute</ENAMEX> ofTechnology,
          <ENAMEX TYPE="CONTACT_INFO">http://www.</ENAMEX>speech.<ENAMEX TYPE="ORGANIZATION">kth</ENAMEX>.<ENAMEX TYPE="PRODUCT">se/NICO/</ENAMEX>index.<ENAMEX TYPE="ORGANIZATION">html</ENAMEX>.
          Defining the network architecture is a very important
          <ENAMEX TYPE="ORGANIZATION">decisionthat</ENAMEX> can dramatically alter the results of the
          analysis [ <TIMEX TYPE="DATE">23</TIMEX> ] . There are a variety of
          strategiesutilized for selection of the network
          architecture. The featuresof network architecture most
          commonly optimized are the number of hiddenlayers and the
          number of nodes in the hidden layer. Many of
          <ENAMEX TYPE="ORGANIZATION">theseapproaches</ENAMEX> use a prediction error fitness measure,
          such that theyselect an architecture based on its
          <ENAMEX TYPE="ORGANIZATION">generalization</ENAMEX> to new observations [ <TIMEX TYPE="DATE">23</TIMEX> ] , while others
          use classification error,or training error [ <TIMEX TYPE="DATE">24</TIMEX> ] . We
          chose to useclassification error rather than prediction
          error as a basis forevaluating and making changes to the
          <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> architecture because weuse prediction error to
          measure the overall network fitness. Webegan with a very
          small <ENAMEX TYPE="ORG_DESC">network</ENAMEX> and varied several parameters includingthe
          number of hidden layers, number of nodes in the hidden
          layer,and learning momentum (the fraction of the previous
          change in aweight that is added to the next change) to
          obtain an appropriatearchitecture for each data set. This
          trial-and-error approach iscommonly employed for
          optimization of <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> architecture [ <NUMEX TYPE="CARDINAL">24 25</NUMEX> ] .
        
        
          A <ENAMEX TYPE="ORGANIZATION">Genetic Programming Neural Network</ENAMEX> (GPNN)
          Strategy
          We developed a <ENAMEX TYPE="ORGANIZATION">GP-optimized NN</ENAMEX> (GPNN) in an attempt to
          improveupon the trial-and-error process of choosing an
          optimal architecturefor a pure <ENAMEX TYPE="SUBSTANCE">feed</ENAMEX>-forward <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>. The
          <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> optimizes the inputs froma larger pool of variables,
          the weights, and the connectivity ofthe <ENAMEX TYPE="ORG_DESC">network</ENAMEX> including
          the number of hidden layers and the numberof nodes in the
          hidden layer. Thus, the algorithm attempts to
          generateappropriate network architecture for a given data
          set. Optimizationof NN architecture using <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> was first
          proposed by <ENAMEX TYPE="ORGANIZATION">Koza</ENAMEX> and <ENAMEX TYPE="PRODUCT">Rice</ENAMEX> [ <TIMEX TYPE="DATE">14</TIMEX> ] .
          The use of binary expression trees allow for the
          flexibility ofthe <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> to evolve a tree-like structure that
          <ENAMEX TYPE="ORGANIZATION">adheres</ENAMEX> to the componentsof a NN. Figure 3shows an
          exampleof a binary expression tree representation of a NN
          generated byGPNN. Figure <NUMEX TYPE="CARDINAL">4shows</NUMEX> the sameNN that has been
          reduced from the binary expression tree form tolook more
          like a common <ENAMEX TYPE="SUBSTANCE">feed</ENAMEX>-forward NN. The <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> is constrained
          insuch a way that it uses standard <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> <ENAMEX TYPE="ORG_DESC">operators</ENAMEX> but
          retains the typicalstructure of a <ENAMEX TYPE="SUBSTANCE">feed</ENAMEX>-forward NN. A set
          of rules is defined priorto network evolution to ensure
          that the <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> tree maintains a structurethat represents a
          <ENAMEX TYPE="ORGANIZATION">NN</ENAMEX>. The rules used for this <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> implementationare
          consistent with those described by <ENAMEX TYPE="ORGANIZATION">Koza</ENAMEX> and <ENAMEX TYPE="PRODUCT">Rice</ENAMEX> [ <TIMEX TYPE="DATE">14</TIMEX> ] .
          The flexibility of the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> allowsoptimal network
          <ENAMEX TYPE="ORGANIZATION">architectures</ENAMEX> to be generated that contain the
          appropriate inputs,<ENAMEX TYPE="FAC_DESC">connections</ENAMEX>, and weights for a given
          <ENAMEX TYPE="ORGANIZATION">data</ENAMEX> set.
          The <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> has a set of parameters that must be
          initialized beforebeginning the evolution of <ENAMEX TYPE="PRODUCT">NN</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>.
          First, a distinct set of inputsmust be identified. All
          possible variables can be included as optionalinputs,
          although the <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> is not required to use all of them.
          <NUMEX TYPE="ORDINAL">Second</NUMEX>,a set of mathematical functions used in weight
          <ENAMEX TYPE="PER_DESC">generation</ENAMEX> must bespecified. In the present study, we use
          only the <NUMEX TYPE="CARDINAL">four</NUMEX> basic arithmetic <ENAMEX TYPE="PER_DESC">operators</ENAMEX>.<NUMEX TYPE="ORDINAL">Third</NUMEX>, a fitness
          function for the evaluation of <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX> is definedby
          the <ENAMEX TYPE="PER_DESC">user</ENAMEX>. Here, we have designated classification error
          as thefitness function. Finally, the operating parameters
          of the <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> mustbe initialized. These include initial
          population size, <ENAMEX TYPE="PER_DESC">number</ENAMEX> ofgenerations, reproduction rate,
          crossover rate, and mutation rate [ <TIMEX TYPE="DATE">14</TIMEX> ] .
          Training the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> begins by generating an initial
          <ENAMEX TYPE="ORGANIZATION">random</ENAMEX> populationof solutions. Each solution is a binary
          <ENAMEX TYPE="PLANT">expression tree</ENAMEX> representationof a <ENAMEX TYPE="ORGANIZATION">NN</ENAMEX>, similar to that
          shown in Figure 3.The <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> then evaluates each NN. The best
          solutions areselected for crossover and reproduction
          using a fitness-proportionateselection technique, called
          roulette wheel selection, based on theclassification
          error of the training data [ <TIMEX TYPE="DATE">26</TIMEX> ] .A predefined
          proportion of the best solutions will bedirectly copied
          (reproduced) into the new generation. Another
          proportionof the solutions will be used for crossover
          with other best solutions.Crossover must take place such
          that the rules of network <ENAMEX TYPE="PER_DESC">constructionstill</ENAMEX> apply. Next,
          the new generation, which is equal in size tothe original
          <ENAMEX TYPE="ORGANIZATION">population</ENAMEX>, begins the cycle again. This continuesuntil
          some criterion is met at which point the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> stops.
          <ENAMEX TYPE="ORGANIZATION">Thiscriterion</ENAMEX> is either a classification error of <NUMEX TYPE="CARDINAL">zero</NUMEX> or
          the maximumnumber of <ENAMEX TYPE="PER_DESC">generations</ENAMEX> has been reached. In
          addition, a "best-so-far"solution is chosen after each
          generation. At the end of the <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> run,the one
          "best-so-far" solution is used as the solution to the
          problem [ <NUMEX TYPE="CARDINAL">14 16</NUMEX> ] .
          While <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> can be effective for searching highly
          nonlinear, multidimensionalsearch spaces, it is still
          susceptible to stalling on local <ENAMEX TYPE="PER_DESC">minima</ENAMEX> [ <TIMEX TYPE="DATE">14</TIMEX> ] . To
          address this problem, <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> canbe run in parallel on
          several different <ENAMEX TYPE="ORG_DESC">processors</ENAMEX>. Several
          isolatedpopulations, or demes, are created and a periodic
          <ENAMEX TYPE="ORG_DESC">exchange</ENAMEX> of <ENAMEX TYPE="SUBSTANCE">bestsolutions</ENAMEX> takes place between the
          <ENAMEX TYPE="PER_DESC">populations</ENAMEX>. This is often referredto as an "island
          model" [ <TIMEX TYPE="DATE">27</TIMEX> ] . This exchangeincreases diversity among
          the solutions in the different <ENAMEX TYPE="PER_DESC">populations</ENAMEX>.Following the
          set number of <ENAMEX TYPE="PER_DESC">generations</ENAMEX>, the best-so-far solutionsfrom
          each of the 
          <ENAMEX TYPE="ORGANIZATION">n</ENAMEX> <ENAMEX TYPE="ORG_DESC">processors</ENAMEX> are compared and a
          singlebest solution is selected. This <ENAMEX TYPE="SUBSTANCE">solution</ENAMEX> has the
          minimum classificationerror of all solutions generated [
          <NUMEX TYPE="CARDINAL">28</NUMEX> ] .
        
        
          Cross-Validation
          While <ENAMEX TYPE="ORGANIZATION">NN</ENAMEX> are known for their ability to model
          nonlinear data,they are also susceptible to <NUMEX TYPE="CARDINAL">over</NUMEX>-fitting.
          To evaluate the generalizabilityof <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> and <ENAMEX TYPE="PRODUCT">GPNN</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>,
          we used <NUMEX TYPE="CARDINAL">10</NUMEX> fold cross-validation [ <NUMEX TYPE="CARDINAL">29 30</NUMEX> ] (CV).Here, the
          <ENAMEX TYPE="ORGANIZATION">data</ENAMEX> are divided into <NUMEX TYPE="CARDINAL">10</NUMEX> parts of equal size. We use
          9/10of the data to train the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> or the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX>, and we use
          the remaining <ENAMEX TYPE="PRODUCT">1/10of</ENAMEX> data to test the <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX> and estimate
          the prediction error, whichis how well the <ENAMEX TYPE="PRODUCT">NN</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX> is
          able to predict disease status in <NUMEX TYPE="CARDINAL">that1/10</NUMEX> of the data.
          This is done <NUMEX TYPE="CARDINAL">10</NUMEX> times, each time leaving outa different
          <NUMEX TYPE="CARDINAL">1/10</NUMEX> of data for testing [ <NUMEX TYPE="CARDINAL">29 30</NUMEX> ] .A prediction error is
          estimated as an average across the <NUMEX TYPE="CARDINAL">10</NUMEX>
          <ENAMEX TYPE="ORGANIZATION">cross</ENAMEX>-validations.Cross-validation consistency is a
          measure of the number of timeseach variable appears in
          the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> or <ENAMEX TYPE="PRODUCT">GPNN</ENAMEX> model across the <NUMEX TYPE="CARDINAL">10</NUMEX> cross-validations [
          <NUMEX TYPE="CARDINAL">21 31 32</NUMEX> ] . That is, we measuredthe consistency with
          which each single nucleotide polymorphism (SNP)was
          identified across the <NUMEX TYPE="CARDINAL">10</NUMEX> cross-validations. The
          motivation <TIMEX TYPE="DATE">forthis</TIMEX> statistic is that the effects of the
          <ENAMEX TYPE="ORGANIZATION">functional SNPs</ENAMEX> shouldbe present in most splits of the
          <ENAMEX TYPE="ORGANIZATION">data</ENAMEX>. Thus, a high cross-validationconsistency (<NUMEX TYPE="MONEY">~10</NUMEX>)
          lends support to that <ENAMEX TYPE="ORGANIZATION">SNP</ENAMEX> being important forthe
          <ENAMEX TYPE="ORGANIZATION">epistasis</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX>. Further detail regarding the
          implementationof cross-validation can be found in the
          <ENAMEX TYPE="ORGANIZATION">Data Analysis</ENAMEX> section ofthe paper.
        
      
      
        Results
        
          Trial-and-error procedure for the back propagation
          <ENAMEX TYPE="ORGANIZATION">NN</ENAMEX> (BPNN)
          The results of our trial-and-error optimization
          technique forselecting the traditional BPNN architecture
          indicate the importanceof selecting the optimal NN
          architecture for each different epistasismodel. Table
          1shows the resultsfrom the traditional BPNN architecture
          <ENAMEX TYPE="PERSON">optimization</ENAMEX> technique onone data set from each epistasis
          model generated with the <NUMEX TYPE="CARDINAL">two</NUMEX> functionalSNPs only. A
          schematic for each of the best architectures selectedis
          shown in Figure <NUMEX TYPE="CARDINAL">5</NUMEX>. Note thatthe optimal architecture
          varied for each of the epistasis <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>.For example, the
          <ENAMEX TYPE="NATIONALITY">optimal</ENAMEX> architecture for <ENAMEX TYPE="PRODUCT">Model 1</ENAMEX> was composed of2 hidden
          <ENAMEX TYPE="PERSON">layers</ENAMEX>, <NUMEX TYPE="CARDINAL">15</NUMEX> nodes in the first layer and <NUMEX TYPE="CARDINAL">5</NUMEX> nodes in
          thesecond layer, and a momentum of <NUMEX TYPE="CARDINAL">0.9</NUMEX>. In contrast, for
          <ENAMEX TYPE="PRODUCT">Model 2</ENAMEX> theoptimal architecture included <NUMEX TYPE="CARDINAL">2</NUMEX> hidden layers,
          <NUMEX TYPE="CARDINAL">20</NUMEX> nodes in the firstlayer and <NUMEX TYPE="CARDINAL">5</NUMEX> nodes in the second
          layer, and a momentum of <NUMEX TYPE="CARDINAL">0.9</NUMEX>. Differentarchitectures were
          optimal for <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX> <TIMEX TYPE="DATE">3, 4</TIMEX>, and <NUMEX TYPE="CARDINAL">5</NUMEX> as well. Similarresults
          were obtained using the simulated data containing the
          <ENAMEX TYPE="ORGANIZATION">twofunctional</ENAMEX> and <NUMEX TYPE="CARDINAL">eight</NUMEX> non-functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> as well (data
          not shown).This provides further motivation for
          automating the optimizationof the NN architecture in
          order to avoid the uncertainty of
          trial-and-errorexperiments.
        
        
          Modeling gene-gene interactions
          <ENAMEX TYPE="PRODUCT">Table 2summarizes</ENAMEX> the averageclassification error
          (i.e. training error) and prediction error(i.e. testing
          error) for the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> and <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> evaluated using <NUMEX TYPE="CARDINAL">100</NUMEX> datasets
          for each of the <NUMEX TYPE="CARDINAL">five</NUMEX> <ENAMEX TYPE="PRODUCT_DESC">epistasis models</ENAMEX> with only the two
          <ENAMEX TYPE="ORGANIZATION">functionalSNPs</ENAMEX> in the analyses. <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> and the BPNN
          performed similarly inboth training the <ENAMEX TYPE="ORGANIZATION">NN</ENAMEX> and testing
          the NN through cross-validation.In each case, the NN
          solution had an error rate within <TIMEX TYPE="TIME">4 percentof</TIMEX> the error
          inherent in the data. Due to the probabilistic natureof
          the penetrance functions used to simulate the data,there
          is some degree of noise simulated in the data. The
          average errorin the <NUMEX TYPE="CARDINAL">100</NUMEX> <ENAMEX TYPE="ORG_DESC">datasets</ENAMEX> generated under each
          <ENAMEX TYPE="ORGANIZATION">epistasis</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX> are <NUMEX TYPE="PERCENT">24%,18%</NUMEX>, <NUMEX TYPE="PERCENT">27%</NUMEX>, <NUMEX TYPE="PERCENT">36%</NUMEX>, <NUMEX TYPE="PERCENT">40%</NUMEX> for <ENAMEX TYPE="PRODUCT">Model 1</ENAMEX>,
          <ENAMEX TYPE="CONTACT_INFO">2, 3, 4</ENAMEX>, and <NUMEX TYPE="CARDINAL">5</NUMEX>, respectively. Therefore,the error
          estimates obtained by the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> or GPNN are very closeto
          the true error rate. There is also little opportunity for
          either methodto over-fit the data here, since only the
          <ENAMEX TYPE="ORGANIZATION">functional SNPs</ENAMEX> are presentin the analysis. These results
          demonstrate that the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> and <ENAMEX TYPE="ORGANIZATION">GPNNare</ENAMEX> both able to model
          the nonlinear gene-gene interactions specifiedby these
          models.
        
        
          <ENAMEX TYPE="PERSON">Detecting</ENAMEX> and modeling gene-gene
          interactions
          <ENAMEX TYPE="PRODUCT">Table 3shows</ENAMEX> the average classificationerror and
          prediction error for the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> and <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> evaluated using100
          <ENAMEX TYPE="ORGANIZATION">data</ENAMEX> sets for each of the <NUMEX TYPE="CARDINAL">five</NUMEX> <ENAMEX TYPE="PRODUCT_DESC">epistasis models</ENAMEX> with the
          <NUMEX TYPE="CARDINAL">two</NUMEX> functionaland <NUMEX TYPE="CARDINAL">eight</NUMEX> non-functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX>. GPNN
          consistently had a lower predictionerror than the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>,
          while the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> consistently had a lower
          <ENAMEX TYPE="ORGANIZATION">classificationerror</ENAMEX>. The lower classification error seen
          with the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> is due <TIMEX TYPE="DATE">toover</TIMEX>-fitting. These results show
          that when non-functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> arepresent, the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> has a
          tendency to <NUMEX TYPE="CARDINAL">over</NUMEX>-fit the data and thereforehave a higher
          prediction error than <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX>. <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is able to
          modelgene-gene interactions and develop <ENAMEX TYPE="PRODUCT_DESC">NN models</ENAMEX> that
          can generalizeto new observations.
          <ENAMEX TYPE="PRODUCT">Table 4shows</ENAMEX> the power todetect the two functional
          <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> for <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> and the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> using <NUMEX TYPE="CARDINAL">100</NUMEX> datasets for each of
          the <NUMEX TYPE="CARDINAL">five</NUMEX> <ENAMEX TYPE="PRODUCT_DESC">epistasis models</ENAMEX> with both the <NUMEX TYPE="CARDINAL">two</NUMEX> functionaland
          <NUMEX TYPE="CARDINAL">eight</NUMEX> non-functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> in the analyses. For all <NUMEX TYPE="CARDINAL">five</NUMEX>
          models,<ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> had a higher power than the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> to detect
          both <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX>. Theseresults demonstrate the high power of
          <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> in comparison to a <ENAMEX TYPE="ORGANIZATION">BPNNwhen</ENAMEX> attempting to detect
          <ENAMEX TYPE="PERSON">gene</ENAMEX>-gene interactions in the presenceof non-functional
          <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX>.
        
      
      
        Discussion
        We have implemented a NN that is optimized by <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> using
        the approachoutlined by <ENAMEX TYPE="ORGANIZATION">Koza</ENAMEX> and <ENAMEX TYPE="PRODUCT">Rice</ENAMEX> [ <TIMEX TYPE="DATE">14</TIMEX> ] . Based on
        theresults of the trial and error architecture
        optimization, wehave shown that the selection of optimal NN
        architecture can alterthe results of data analyses. For <TIMEX TYPE="TIME">one</TIMEX>
        example data set from eachof the epistasis <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>, the best
        architecture was quite different,as shown in <ENAMEX TYPE="PRODUCT">Table</ENAMEX> 1and
        Figure 5for functional <ENAMEX TYPE="ORGANIZATION">SNP</ENAMEX> only data. This wasalso the case
        for data containing functional and non-functionalSNPs (data
        not shown). Since we only tried <NUMEX TYPE="CARDINAL">27</NUMEX> different
        architectures,there may have been more appropriate
        architectures for these datasets. In fact, since
        enumeration of all possible NN architecturesis impossible [
        <NUMEX TYPE="CARDINAL">24</NUMEX> ] , there is no wayto be certain that the global best
        architecture is ever selected.Thus, the ability to optimize
        the NN architecture using <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> maydramatically improve the
        results of NN analyses.
        Using simulated data, we demonstrated that <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> was able
        to modelnonlinear interactions as well as a traditional
        <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>. These resultsare important because it is well known
        that traditional BPNN areuniversal function approximators [
        <NUMEX TYPE="CARDINAL">22</NUMEX> ] .When given the functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX>, one would expect the
        <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> to accuratelymodel the data. Here, we have shown that
        <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is also capable <ENAMEX TYPE="PER_DESC">ofaccurately</ENAMEX> modeling the data. This
        demonstrates that <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is ableto optimize the NN
        architecture such that the NN evolved is ableto model data
        as well as a <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>.
        <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> had improved power and predictive ability compared
        to aBPNN when applied to data containing both functional
        and non-functionalSNPs. These results provide evidence that
        <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is able to detectthe functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> and model the
        interactions for the epistasismodels described here with
        minimal main effects in a sample size of200 cases and <NUMEX TYPE="CARDINAL">200</NUMEX>
        controls. In addition, these are the <NUMEX TYPE="CARDINAL">two</NUMEX> criteriawe
        specified for considering GPNN an improvement over the
        <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>.Therefore, in situations where the functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> are
        known andthe <ENAMEX TYPE="PER_DESC">user</ENAMEX> is attempting to model the data, either
        <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> or a <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> wouldbe equally useful. However, in
        situations where the functional SNPsare unknown and the
        <ENAMEX TYPE="PER_DESC">user</ENAMEX> wants to perform variable selection aswell as model
        <ENAMEX TYPE="PERSON">fitting</ENAMEX>, <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> may be the preferable method. This
        distinctioncan be made due to the increase in power of GPNN
        and the fact thatGPNN does not over-fit the data much like
        the traditional BPNN.
        We speculate that <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is not over-fitting because while
        <ENAMEX TYPE="ORGANIZATION">theGPNN</ENAMEX> is theoretically able to build a <ENAMEX TYPE="PLANT">tree</ENAMEX> with all of
        the variablesas inputs, it is not building a fully
        <ENAMEX TYPE="ORGANIZATION">connected NN</ENAMEX>. This may bepreventing it from <NUMEX TYPE="CARDINAL">over</NUMEX>-fitting
        the way that the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> has done.<NUMEX TYPE="ORDINAL">Secondly</NUMEX>, it is possible
        that the strong signal of the correct solutionin the
        simulated data caused the <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> to quickly pick up that
        <ENAMEX TYPE="ORGANIZATION">signal</ENAMEX>,and propagate <ENAMEX TYPE="PLANT">trees</ENAMEX> with components of that model in
        the <ENAMEX TYPE="PER_DESC">population</ENAMEX>.Because we have mutation set to <NUMEX TYPE="PERCENT">0%</NUMEX>, there is
        never a large changeto the <ENAMEX TYPE="PLANT">trees</ENAMEX> to lead them to explore in
        the other areas of the searchspace. As a result, the GPNN
        <ENAMEX TYPE="ORGANIZATION">converges</ENAMEX> quickly on a small solutioninstead of exploring
        the entire search space. We plan to explorewhether GPNN
        <NUMEX TYPE="CARDINAL">over</NUMEX>-fits in certain situations and if so, to
        <ENAMEX TYPE="ORGANIZATION">developstrategies</ENAMEX> to deal with this issue, such as the
        three-way data split discussedby <ENAMEX TYPE="PERSON">Roland</ENAMEX> [ <TIMEX TYPE="DATE">33</TIMEX> ] .
        In an attempt to estimate the power of these NN methods
        for arange of genetic effects, we selected epistasis models
        with varyingdegrees of heritability. Heritability, in the
        broad sense, is theproportion of total phenotypic variance
        attributable to geneticfactors. Thus, higher heritability
        values will have a stronger geneticeffect. The <NUMEX TYPE="CARDINAL">five</NUMEX> disease
        models we used varied in heritability <ENAMEX TYPE="PRODUCT">from0.008</ENAMEX> to <NUMEX TYPE="CARDINAL">0.053</NUMEX>.
        To calculate the heritability of these <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>, we usedthe
        formula described by <ENAMEX TYPE="ORGANIZATION">Culverhouse et al.</ENAMEX> [ <TIMEX TYPE="DATE">34</TIMEX> ] .
        Heritabilityvaries from <NUMEX TYPE="MONEY">0.0</NUMEX> (no genetic component) to <NUMEX TYPE="CARDINAL">1.0</NUMEX>
        (completely genetically-specified).
        We selected <ENAMEX TYPE="PER_DESC">models</ENAMEX> with varying heritability values to
        obtaina more accurate comparison of the two NN methods in
        the presenceof different genetic effects. Interestingly,
        the results showedthat <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> had <NUMEX TYPE="PERCENT">greater than 80%</NUMEX> power for
        all heritability valuestested in the range of <NUMEX TYPE="CARDINAL">0.012</NUMEX> to
        <NUMEX TYPE="CARDINAL">0.053</NUMEX>. In addition, <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> had <NUMEX TYPE="PERCENT">100%</NUMEX>power for all <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX> with
        a heritability of <NUMEX TYPE="CARDINAL">0.026</NUMEX> or greater.However, the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> had
        greater than <NUMEX TYPE="PERCENT">80%</NUMEX> power only for heritabilityvalues greater
        than <NUMEX TYPE="CARDINAL">0.051</NUMEX>. Therefore, the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> has low power todetect
        <ENAMEX TYPE="PERSON">gene</ENAMEX>-gene interactions that have an intermediate to
        weakgenetic effect (i.e. heritability value in the range
        from <NUMEX TYPE="MONEY">0.008to 0.026</NUMEX>), while <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> maintains <NUMEX TYPE="PERCENT">greater than 80%</NUMEX>
        power, even foran epistasis <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX> with a relatively weak
        genetic effect (i.e. <NUMEX TYPE="MONEY">0.012</NUMEX>). Thepower of <ENAMEX TYPE="SUBSTANCE">GPNN</ENAMEX> falls below
        <NUMEX TYPE="PERCENT">80%</NUMEX> for a heritability value that is verysmall (i.e.
        <NUMEX TYPE="MONEY">0.008</NUMEX>). Thus, <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is likely to have higher power thanthe
        <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> for detecting many gene-gene interaction <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX> with
        intermediateto small genetic effects.
        While <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> has improved power and predictive ability
        over <TIMEX TYPE="DATE">theBPNN</TIMEX>, there are some advantages and disadvantages
        to this approach.An advantage of <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is its modeling
        flexibility. With commercialBPNN software, such as the BPNN
        used here, the <ENAMEX TYPE="PER_DESC">user</ENAMEX> must definethe inputs, the initial
        values of the weights, the number of connections eachinput
        has, and the number of hidden layers. Often, the
        algorithmparameters that work well for one data set will
        not be successfulwith another data set, as demonstrated
        here. With the <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> optimization,the <ENAMEX TYPE="PER_DESC">user</ENAMEX> only needs to
        specify a pool of variables that the networkcan use and the
        <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> will select the optimal inputs, weights, <ENAMEX TYPE="FAC_DESC">connections</ENAMEX>,and
        hidden layers. An important disadvantage of <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is the
        requiredcomputational resources. To use <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> effectively,
        <NUMEX TYPE="CARDINAL">one</NUMEX> needs accessto a parallel processing environment. For a
        <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>, on the other hand, adesktop computer is the only
        requirement. Another disadvantage isthe interpretation of
        the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> models. The output of <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is a NNin the form of a
        binary expression <ENAMEX TYPE="PLANT">tree</ENAMEX>. A NN in this form can bedifficult
        to interpret, as it can get quite large (<NUMEX TYPE="CARDINAL">up to 500</NUMEX>
        <ENAMEX TYPE="ORGANIZATION">nodes</ENAMEX>).
        While we have demonstrated the ability of <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> to model
        and detectgene-gene interactions, further work is needed to
        fully evaluatethe approach. For example, we would like to
        know whether using alocal search algorithm, such as back
        <ENAMEX TYPE="ORGANIZATION">propagation</ENAMEX> or simulated annealing [ <TIMEX TYPE="DATE">35</TIMEX> ] , to refine the
        weights of a <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> modelis useful. This sort of approach has
        been employed for a geneticalgorithm approach to optimizing
        NN architecture for classificationof galaxies in astronomy
        [ <TIMEX TYPE="DATE">36</TIMEX> ] . However, as describedabove, a local search could
        lead to increased <NUMEX TYPE="PERCENT">over</NUMEX>-fitting. Next,the current version of
        <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> uses only arithmetic <ENAMEX TYPE="PER_DESC">operators</ENAMEX> in thebinary expression
        <ENAMEX TYPE="PLANT">trees</ENAMEX>. The use of a richer function set, includingBoolean
        <ENAMEX TYPE="PER_DESC">operators</ENAMEX> and other mathematical <ENAMEX TYPE="PER_DESC">operators</ENAMEX>, may allow
        <ENAMEX TYPE="ORGANIZATION">moreflexibility</ENAMEX> in the <ENAMEX TYPE="PRODUCT">NN</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>. <NUMEX TYPE="ORDINAL">Third</NUMEX>, we would like to
        evaluate thepower of <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> for a variety of high order
        <ENAMEX TYPE="PRODUCT">epistasis</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX> (suchas <TIMEX TYPE="TIME">three, four</TIMEX>, and <NUMEX TYPE="CARDINAL">five</NUMEX> locus
        <ENAMEX TYPE="PRODUCT">interaction</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>). Finally, wewould like to develop and
        distribute a GPNN software package.
      
      
        Conclusions
        The results of this study demonstrate that <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX> is an
        excellentway of automating NN architecture design. The NN
        <ENAMEX TYPE="PERSON">inputs</ENAMEX>, weights,and interconnections are optimized for a
        specific problem whiledecreasing susceptibility to
        <NUMEX TYPE="CARDINAL">over</NUMEX>-fitting which is common in thetraditional BPNN
        approach. We have shown that <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> is able to model
        <ENAMEX TYPE="PERSON">gene</ENAMEX>-geneinteractions as well as a <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> in data containing
        only the functionalSNPs. We have also shown that when there
        are nonfunctional SNPsin the data (i.e. potential false
        <ENAMEX TYPE="ORGANIZATION">positives</ENAMEX>), <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> has higher powerthan a <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>, in addition
        to lower prediction error. We anticipatethis will be an
        important pattern recognition method in the searchfor
        complex disease susceptibility <ENAMEX TYPE="SUBSTANCE">genes</ENAMEX>.
      
      
        Methods
        
          <ENAMEX TYPE="ORGANIZATION">Data simulation</ENAMEX>
          The goal of the data simulation was to generate data
          sets thatexhibit gene-gene interactions for the purpose
          of evaluating theclassification error, prediction error,
          and power of <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> and atraditional <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>. As discussed by
          <ENAMEX TYPE="ORGANIZATION">Templeton</ENAMEX> [ <ENAMEX TYPE="LAW">1</ENAMEX> ] ,epistasis, or gene-gene interaction
          occurs when the combined effectof <NUMEX TYPE="CARDINAL">two</NUMEX> or more <ENAMEX TYPE="SUBSTANCE">genes</ENAMEX> on a
          <ENAMEX TYPE="ORGANIZATION">phenotype</ENAMEX> could not have been predictedfrom their
          independent effects. Current statistical approaches
          inhuman genetics focus primarily on detecting the main
          effects and rarelyconsider the possibility of
          interactions [ <ENAMEX TYPE="LAW">1</ENAMEX> ] .In contrast, we are interested in
          simulating data using different epistasismodels that
          exhibit minimal independent main effects, but producean
          <ENAMEX TYPE="ORGANIZATION">association</ENAMEX> with <ENAMEX TYPE="DISEASE">disease</ENAMEX> primarily through interactions.
          We simulateddata with <NUMEX TYPE="CARDINAL">two</NUMEX> functional single nucleotide
          <ENAMEX TYPE="ORGANIZATION">polymorphisms</ENAMEX> (SNPs)to compare <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> to a <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> for
          modeling nonlinear epistasis <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>.In this study, we use
          penetrance functions as genetic models.
          Penetrance functions model the relationship between
          genetic variationsand disease risk. <ENAMEX TYPE="ORGANIZATION">Penetrance</ENAMEX> is defined
          as the probability of diseasegiven a particular
          combination of genotypes. We chose <NUMEX TYPE="CARDINAL">five</NUMEX> epistasismodels
          to simulate the data. The <NUMEX TYPE="ORDINAL">first</NUMEX> model used was
          initiallydescribed by <ENAMEX TYPE="PERSON">Li</ENAMEX> and <ENAMEX TYPE="PERSON">Reich</ENAMEX> [ <TIMEX TYPE="DATE">37</TIMEX> ] and later by
          Culverhouseet al. [ <TIMEX TYPE="DATE">34</TIMEX> ] and <ENAMEX TYPE="ORGANIZATION">Moore et al.</ENAMEX> [ <TIMEX TYPE="DATE">38</TIMEX> ] (<ENAMEX TYPE="PRODUCT">Table</ENAMEX>
          <NUMEX TYPE="CARDINAL">5</NUMEX>).This <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX> is based on the nonlinear XOR function that
          generatesan interaction effect in which high risk of
          <ENAMEX TYPE="DISEASE">disease</ENAMEX> is dependenton inheriting a heterozygous genotype
          ( 
          <ENAMEX TYPE="ORGANIZATION">Aa</ENAMEX> ) from <NUMEX TYPE="CARDINAL">one</NUMEX> <ENAMEX TYPE="ORGANIZATION">SNPor</ENAMEX> a heterozygous
          genotype from a <NUMEX TYPE="ORDINAL">second</NUMEX> SNP ( 
          <ENAMEX TYPE="ORGANIZATION">Bb</ENAMEX> ), butnot both. The high-risk
          <ENAMEX TYPE="SUBSTANCE">genotype</ENAMEX> combinations are 
          AaBB , 
          Aabb , 
          <ENAMEX TYPE="ORGANIZATION">AABb</ENAMEX> ,and 
          aaBb with <ENAMEX TYPE="DISEASE">disease</ENAMEX> penetrance of <NUMEX TYPE="CARDINAL">0.1</NUMEX>
          for all <NUMEX TYPE="CARDINAL">four</NUMEX>. <ENAMEX TYPE="ORGANIZATION">Thesecond</ENAMEX> model was initially described by
          <ENAMEX TYPE="PERSON">Frankel</ENAMEX> and <ENAMEX TYPE="ORGANIZATION">Schork</ENAMEX> [ <TIMEX TYPE="DATE">39</TIMEX> ] and later by <ENAMEX TYPE="ORGANIZATION">Culverhouse et</ENAMEX> al.
          [ <TIMEX TYPE="DATE">34</TIMEX> ] and <ENAMEX TYPE="ORGANIZATION">Moore et al.</ENAMEX> [ <TIMEX TYPE="DATE">38</TIMEX> ] (<ENAMEX TYPE="PRODUCT">Table 6</ENAMEX>).In this <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX>,
          high risk of <ENAMEX TYPE="DISEASE">disease</ENAMEX> is dependent on inheriting twoand
          exactly <NUMEX TYPE="CARDINAL">two</NUMEX> high-risk alleles, either " 
          a " or " 
          b "from <NUMEX TYPE="CARDINAL">two</NUMEX> different loci. For
          this model, the high-risk genotypecombinations are 
          <ENAMEX TYPE="ORGANIZATION">AAbb</ENAMEX> , 
          AaBb , and 
          aaBB withdisease penetrance of <NUMEX TYPE="MONEY">0.1</NUMEX>,
          <NUMEX TYPE="CARDINAL">0.05</NUMEX>, and <NUMEX TYPE="MONEY">0.1</NUMEX> respectively.
          The subsequent <NUMEX TYPE="CARDINAL">three</NUMEX> <ENAMEX TYPE="PER_DESC">models</ENAMEX> were chosen from a set of
          <ENAMEX TYPE="ORGANIZATION">epistasismodels</ENAMEX> described by <ENAMEX TYPE="ORGANIZATION">Moore et al.</ENAMEX> [ <TIMEX TYPE="DATE">38</TIMEX> ] (<ENAMEX TYPE="PRODUCT">Table</ENAMEX>
          <ENAMEX TYPE="CONTACT_INFO">7, 8, 9</ENAMEX>). All <NUMEX TYPE="CARDINAL">five</NUMEX> <ENAMEX TYPE="PER_DESC">models</ENAMEX> were selected becausethey
          exhibit interaction effects in the absence of any main
          effectswhen allele frequencies are equal and genotypes
          are generated usingthe <ENAMEX TYPE="PERSON">Hardy-Weinberg</ENAMEX> equation. In
          addition, we selected <ENAMEX TYPE="PER_DESC">models</ENAMEX> withina range of
          <ENAMEX TYPE="ORGANIZATION">heritability</ENAMEX> values. As mentioned previously,
          heritability,in the broad sense, is the proportion of
          total phenotypic varianceattributable to genetic factors.
          Thus, higher heritability valueswill have a stronger
          genetic effect. We selected <ENAMEX TYPE="PER_DESC">models</ENAMEX> with
          <ENAMEX TYPE="ORGANIZATION">varyingheritability</ENAMEX> values to obtain a more accurate
          comparison of thetwo NN methods in the presence of
          varying genetic effects. The heritabilitiesare <NUMEX TYPE="CARDINAL">0.053</NUMEX>,
          <NUMEX TYPE="CARDINAL">0.051</NUMEX>, <NUMEX TYPE="CARDINAL">0.026</NUMEX>, <NUMEX TYPE="CARDINAL">0.012</NUMEX>, and <NUMEX TYPE="CARDINAL">0.008</NUMEX> for <ENAMEX TYPE="LAW">Models 1, 2, 3,</ENAMEX> 4,and
          <TIMEX TYPE="DATE">5</TIMEX> respectively. Although the biological plausibility of
          <ENAMEX TYPE="ORGANIZATION">thesemodels</ENAMEX> is unknown, they represent the worst-case
          scenario for adisease-detection method because they have
          minimal main effects.If a method works well with minimal
          main effects, presumably themethod will continue to work
          well in the presence of main effects.
          Each data set consisted of <NUMEX TYPE="CARDINAL">200</NUMEX> cases and <NUMEX TYPE="CARDINAL">200</NUMEX> controls,
          each withtwo functional interacting <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX>. <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> generally
          have <NUMEX TYPE="CARDINAL">two</NUMEX> possiblealleles, and in our study, they were
          simulated with equal allelefrequencies ( 
          <ENAMEX TYPE="ORGANIZATION">p</ENAMEX> = 
          q = <NUMEX TYPE="CARDINAL">0.5</NUMEX>). We used a dummy
          variableencoding for the genotypes where 
          <ENAMEX TYPE="ORGANIZATION">n-1</ENAMEX> dummy variables areused for 
          <ENAMEX TYPE="ORGANIZATION">n</ENAMEX> levels [ <TIMEX TYPE="DATE">40</TIMEX> ] . We simulated
          100data sets of each epistasis <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX> with <NUMEX TYPE="CARDINAL">two</NUMEX> functional
          <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX>. Basedon the <ENAMEX TYPE="PER_DESC">dummy coding</ENAMEX>, these data would have
          <NUMEX TYPE="CARDINAL">four</NUMEX> variables and thusfour NN inputs. Next, we simulated
          <ENAMEX TYPE="PRODUCT">100</ENAMEX> data sets of each model witheight non-functional SNPs
          and <NUMEX TYPE="CARDINAL">two</NUMEX> functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX>. Based on the dummycoding, these
          <ENAMEX TYPE="ORGANIZATION">data</ENAMEX> would have <NUMEX TYPE="CARDINAL">20</NUMEX> variables and thus 20 NN inputs.These
          <NUMEX TYPE="CARDINAL">two</NUMEX> types of data sets allow us to evaluate the abilityto
          either model gene-gene interactions or to detect
          <ENAMEX TYPE="PERSON">gene</ENAMEX>-gene interactions.
        
        
          <ENAMEX TYPE="ORGANIZATION">Data</ENAMEX> analysis
          In the <NUMEX TYPE="ORDINAL">first</NUMEX> stage of analysis, we posed the following
          question:Is GPNN able to model gene-gene interactions as
          well or better thana traditional BPNN? First, we used a
          fully connected, feed-forwardBPNN to model gene-gene
          interactions in the simulated data containingfunctional
          <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> only. The <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> was trained for <TIMEX TYPE="DATE">1000</TIMEX> epochs.
          Althoughthere are an effectively infinite number of
          possible <ENAMEX TYPE="SUBSTANCE">NN architectures</ENAMEX>,for each data set we evaluated
          the classification ability of <ENAMEX TYPE="PRODUCT">27different</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">architectures</ENAMEX>.
          We chose the best architecture as the onethat minimized
          the classification error and was most parsimonious(i.e.
          simplest <ENAMEX TYPE="ORG_DESC">network</ENAMEX>) in the event of <NUMEX TYPE="CARDINAL">two or more</NUMEX> with equal
          <ENAMEX TYPE="ORGANIZATION">classificationerror</ENAMEX>. We began with a very small network
          (<ENAMEX TYPE="CONTACT_INFO">4 inputs: 1</ENAMEX> output)and varied the number of hidden
          <ENAMEX TYPE="PERSON">layers</ENAMEX> (<NUMEX TYPE="MONEY">0,1,2</NUMEX>), number of nodesin the hidden layers (<ENAMEX TYPE="CONTACT_INFO">5:0,</ENAMEX>
          <TIMEX TYPE="DATE">10</TIMEX>:<ENAMEX TYPE="CONTACT_INFO">0, 15:0, 20:0, 5:5, 10:5, 15:5, 20:5</ENAMEX>),and learning
          momentum (<NUMEX TYPE="MONEY">0.1</NUMEX>, <NUMEX TYPE="CARDINAL">0.5</NUMEX>, <NUMEX TYPE="CARDINAL">0.9</NUMEX>). We used this
          <ENAMEX TYPE="ORGANIZATION">optimizationprocedure</ENAMEX> to analyze <ENAMEX TYPE="PRODUCT">100</ENAMEX> data sets of each
          <ENAMEX TYPE="ORGANIZATION">epistasis</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX>. We used <ENAMEX TYPE="PRODUCT">10fold</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">cross-validation</ENAMEX> to
          evaluate the predictive ability of theBPNN <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>. After
          dividing the data into <NUMEX TYPE="CARDINAL">10</NUMEX> equal parts, the
          architectureoptimization procedure is run on the first
          <NUMEX TYPE="CARDINAL">9/10</NUMEX> of the data toselect the most appropriate
          architecture. Next, the best architectureis used to test
          the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> on the <NUMEX TYPE="CARDINAL">1/10</NUMEX> of the data left out. Thisis done <NUMEX TYPE="CARDINAL">10</NUMEX>
          times, each time leaving out a different <NUMEX TYPE="CARDINAL">1/10</NUMEX> of thedata
          for testing. We then estimated the prediction error based
          onthe average predictive ability across the <NUMEX TYPE="CARDINAL">10</NUMEX>
          <ENAMEX TYPE="ORGANIZATION">cross-validations forall</ENAMEX> <ENAMEX TYPE="PRODUCT">100</ENAMEX> data sets generated under
          each <ENAMEX TYPE="PRODUCT_DESC">epistasis model</ENAMEX>.
          Next, we used the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> to analyze the same <NUMEX TYPE="CARDINAL">100</NUMEX> data
          sets foreach of the <NUMEX TYPE="CARDINAL">five</NUMEX> <ENAMEX TYPE="PRODUCT_DESC">epistasis models</ENAMEX>. The <ENAMEX TYPE="ORGANIZATION">GP</ENAMEX>
          parameter settings included10 <ENAMEX TYPE="PER_DESC">demes</ENAMEX>, migration of best
          models from each deme to all otherdemes every <NUMEX TYPE="CARDINAL">25</NUMEX>
          <ENAMEX TYPE="PER_DESC">generations</ENAMEX>, each <ENAMEX TYPE="PER_DESC">deme</ENAMEX> had a population size of <NUMEX TYPE="CARDINAL">200,50</NUMEX>
          <ENAMEX TYPE="PER_DESC">generations</ENAMEX>, a crossover rate of <NUMEX TYPE="MONEY">0.9</NUMEX>, reproduction rate
          of 0.1,and mutation rate of <NUMEX TYPE="CARDINAL">0.0</NUMEX>. <ENAMEX TYPE="ORGANIZATION">Fitness</ENAMEX> was defined as
          classificationerror of the training data. As with the
          <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>, <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> was requiredto use <NUMEX TYPE="CARDINAL">all four</NUMEX> inputs in the NN
          model for this stage of the analysis.Again, we used <NUMEX TYPE="CARDINAL">10</NUMEX>
          fold cross-validation to evaluate the predictiveability
          of the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> models. We then estimated the prediction
          <ENAMEX TYPE="ORGANIZATION">errorof GPNN</ENAMEX> based on the average prediction error across
          the <NUMEX TYPE="CARDINAL">10</NUMEX> cross-validationsfor all <ENAMEX TYPE="PRODUCT">100</ENAMEX> data sets for each
          <ENAMEX TYPE="ORGANIZATION">epistasis</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX>.
          The <NUMEX TYPE="ORDINAL">second</NUMEX> aspect of this study involves answering the
          followingquestion: In the presence of non-functional SNPs
          (i.e. <ENAMEX TYPE="GPE">potentialfalse-positives</ENAMEX>), is GPNN able to detect
          <ENAMEX TYPE="PERSON">gene</ENAMEX>-gene interactionsas well or better than a
          <ENAMEX TYPE="ORGANIZATION">traditional BPNN</ENAMEX>? <NUMEX TYPE="ORDINAL">First</NUMEX> we used a traditionalBPNN to
          analyze the data with <NUMEX TYPE="CARDINAL">eight</NUMEX> non-functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> and
          <ENAMEX TYPE="ORGANIZATION">twofunctional SNPs</ENAMEX>. We estimated the power of the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> to
          detect the functionalSNPs as described below. In this
          network, all possible inputs areused and the significance
          of each input is calculated from its inputrelevance, <ENAMEX TYPE="NATIONALITY">R</ENAMEX>_I,
          where <ENAMEX TYPE="NATIONALITY">R</ENAMEX>_I is the sum of squared weights for thei thinput
          divided by the sum of squared weights for allinputs.
          Next, we performed <TIMEX TYPE="DATE">1000</TIMEX> permutations of the data to
          determinewhat input relevance was required to consider a
          <ENAMEX TYPE="ORGANIZATION">SNP</ENAMEX> significantin the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX>. The range of critical
          relevance values for determiningsignificance was <NUMEX TYPE="PERCENT">10.43%</NUMEX> -
          <NUMEX TYPE="PERCENT">11.83%</NUMEX>.
          Next, we calculated cross-validation consistency [ <NUMEX TYPE="CARDINAL">21</NUMEX>
          <NUMEX TYPE="CARDINAL">31 32</NUMEX> ] . That is, we measuredthe consistency with which
          each <ENAMEX TYPE="ORGANIZATION">SNP</ENAMEX> was identified across the <NUMEX TYPE="ORDINAL">10cross</NUMEX>-validations.
          The basis for this statistic is that the functional
          <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX>'effect should be present in most splits of the data.
          Thus, a highcross-validation consistency (<NUMEX TYPE="MONEY">~10</NUMEX>) lends
          support to that <ENAMEX TYPE="ORGANIZATION">SNP</ENAMEX> beingimportant for the epistasis
          model. Through permutation testing,we determined an
          empirical cutoff for the cross-validation consistencythat
          would not be expected by chance. We used this cut-off
          valueto select the <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> that were functional in the
          <ENAMEX TYPE="ORGANIZATION">epistasis</ENAMEX> model for eachdata set. For the <ENAMEX TYPE="ORGANIZATION">BPNN</ENAMEX>, a
          cross-validation consistency greater thanor equal to <NUMEX TYPE="CARDINAL">five</NUMEX>
          was required to be statistically significant. Weestimated
          the power by calculating the percentage of datasets
          <ENAMEX TYPE="PER_DESC">wherethe</ENAMEX> correct functional <ENAMEX TYPE="ORGANIZATION">SNPs</ENAMEX> were identified. Either
          <NUMEX TYPE="CARDINAL">one</NUMEX> or bothof the dummy variables could be selected to
          consider a locus presentin the <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX>. Finally, we
          estimated the prediction error based onthe average
          predictive ability across <ENAMEX TYPE="PRODUCT">100</ENAMEX> data sets for each
          <ENAMEX TYPE="ORGANIZATION">epistasismodel</ENAMEX>.
          Next, we used the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> to analyze <ENAMEX TYPE="PRODUCT">100</ENAMEX> data sets for
          each of theepistasis <ENAMEX TYPE="PRODUCT_DESC">models</ENAMEX>. In this implementation, GPNN
          was not requiredto use all the variables as inputs. Here,
          <ENAMEX TYPE="GPE">GPNN</ENAMEX> performed randomvariable selection in the initial
          <ENAMEX TYPE="PER_DESC">population</ENAMEX> of <ENAMEX TYPE="SUBSTANCE">solutions</ENAMEX>. Throughevolution, <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> selects
          those variables that are most relevant.We calculated the
          cross-validation consistency as described above.
          Permutationtesting was used to determine an empirical
          <ENAMEX TYPE="ORGANIZATION">cut-off</ENAMEX> to select theSNPs that were functional in the
          <ENAMEX TYPE="ORGANIZATION">epistasis</ENAMEX> model for each data set.For the <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX>, a
          cross-validation consistency greater than or equalto
          <NUMEX TYPE="CARDINAL">seven</NUMEX> was required to be statistically significant. We
          estimatedthe power of <ENAMEX TYPE="ORGANIZATION">GPNN</ENAMEX> as the number of times the
          <ENAMEX TYPE="ORGANIZATION">functional SNPs</ENAMEX> wereidentified in the model divided by
          the total number of runs. Again,either one or both of the
          dummy variables could be selected to considera locus
          present in the <ENAMEX TYPE="PRODUCT_DESC">model</ENAMEX>. We also estimated the prediction
          <ENAMEX TYPE="ORGANIZATION">errorof GPNN</ENAMEX> based on the average prediction error across
          <ENAMEX TYPE="PRODUCT">100</ENAMEX> data setsper epistasis model.
        
      
      
        <ENAMEX TYPE="PER_DESC">Authors</ENAMEX>' contributions
        <ENAMEX TYPE="ORGANIZATION">JSP</ENAMEX>, <ENAMEX TYPE="ORGANIZATION">LWH</ENAMEX>, and <ENAMEX TYPE="SUBSTANCE">BCW</ENAMEX> performed the computer programming of
        the software.<ENAMEX TYPE="ORGANIZATION">MDR</ENAMEX> participated in the design of the study,
        statistical analyses,and writing of the manuscript. JHM
        participated in the design andcoordination of the study and
        preparation of the final draft ofthe manuscript. All
        <ENAMEX TYPE="PER_DESC">authors</ENAMEX> read and approved the final manuscript.
      
    
  
