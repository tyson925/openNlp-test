
   
   
      
         
            What Is Source <ENAMEX TYPE="LAW">Code</ENAMEX>?
            

            Among the legal remedies being considered in the <ENAMEX TYPE="ORGANIZATION">Microsoft</ENAMEX> antitrust trial
is a court order that would force the <ENAMEX TYPE="ORG_DESC">company</ENAMEX> to reveal the "source code" for
part or all of its <ENAMEX TYPE="PRODUCT">Windows</ENAMEX> operating system. What exactly does this mean?

            Source code is simply the human-readable version of the computer commands
that make up a program. It is the letters and symbols that software engineers
type into their computers when they create an application or operating system.
For example, if a <NUMEX TYPE="MONEY">C</NUMEX>++ <ENAMEX TYPE="ORG_DESC">programmer</ENAMEX> wrote a program to make his computer display
the words, "Hello, <ENAMEX TYPE="ORGANIZATION">World</ENAMEX>," the source code might look like this:

            <NUMEX TYPE="MONEY">#</NUMEX>include <iostream.h>
void main()
{
<ENAMEX TYPE="WORK_OF_ART">cout<<"Hello, World</ENAMEX>";
}

            Although these commands are intelligible to <ENAMEX TYPE="PER_DESC">engineers</ENAMEX>, they are useless to
computers, which understand only ones and <NUMEX TYPE="CARDINAL">zeros</NUMEX>. So, to make the source code
into a functioning program, translation software (called a "<ENAMEX TYPE="ORG_DESC">compiler</ENAMEX>") must
convert it into the binary "object code" that computers can process.

            Open source software, such as the <ENAMEX TYPE="ORGANIZATION">Linux</ENAMEX> operating system, makes both the
object code and the source code freely available so that any <ENAMEX TYPE="ORG_DESC">programmer</ENAMEX> can
figure out how the program is constructed and then alter it to his
satisfaction. But closed source software, such as <ENAMEX TYPE="PERSON">Windows</ENAMEX> and most commercial
programs, is shipped with the object code only. Software <ENAMEX TYPE="ORG_DESC">companies</ENAMEX> argue that
source code contains valuable intellectual property that must be protected. One
common analogy compares source code to the formula for <ENAMEX TYPE="ORGANIZATION">Coca-Cola</ENAMEX>: The <ENAMEX TYPE="ORGANIZATION">Coca-Cola</ENAMEX>
<ENAMEX TYPE="ORGANIZATION">Co.</ENAMEX> <ENAMEX TYPE="PRODUCT_DESC">ships</ENAMEX> only bottles of <ENAMEX TYPE="ORGANIZATION">Coke</ENAMEX> to its <ENAMEX TYPE="PER_DESC">customers</ENAMEX>, not the formula for the <ENAMEX TYPE="SUBSTANCE">drink</ENAMEX>,
because it doesn't want <ENAMEX TYPE="ORG_DESC">competitors</ENAMEX> to brew knock-offs or use the formula to
improve their <ENAMEX TYPE="SUBSTANCE">drinks</ENAMEX>.

            With software, "decompilers"--or, reverse-translation programs--can
theoretically convert object code back into source code. But their inaccuracies
render them largely ineffective. (Think of <NUMEX TYPE="CARDINAL">one</NUMEX> <ENAMEX TYPE="PER_DESC">person</ENAMEX> translating a sentence
from <ENAMEX TYPE="LANGUAGE">English</ENAMEX> to <ENAMEX TYPE="NATIONALITY">Japanese</ENAMEX> and another translating it back into <ENAMEX TYPE="LANGUAGE">English</ENAMEX>; chances
are slim that the sentence would end up in its original form.) Additionally,
attempting to reverse <ENAMEX TYPE="PER_DESC">engineer</ENAMEX> software is illegal: Like most commercial
software <ENAMEX TYPE="ORG_DESC">companies</ENAMEX>, <ENAMEX TYPE="ORGANIZATION">Microsoft</ENAMEX> forbids it as part of its licensing
agreement.

            If <ENAMEX TYPE="ORGANIZATION">Microsoft</ENAMEX> (which owns 
                  Slate
               ) were to make the Windows
source code <ENAMEX TYPE="PER_DESC">public</ENAMEX>, <ENAMEX TYPE="ORG_DESC">competitors</ENAMEX> could use this information to market Windows
clones or alter their operating systems (<ENAMEX TYPE="ORGANIZATION">Linux, Mac</ENAMEX> OS, etc.) to run software
designed for Windows. However, neither project would be easy. Windows <NUMEX TYPE="CARDINAL">98</NUMEX>
contains <NUMEX TYPE="CARDINAL">approximately 20 million</NUMEX> lines of <ENAMEX TYPE="PER_DESC">source</ENAMEX> code written in multiple
computer languages. To use the source code effectively, a <ENAMEX TYPE="ORG_DESC">competitor</ENAMEX> would need
to figure out which commands affect which functions and how changes to <NUMEX TYPE="CARDINAL">one</NUMEX> part
would affect the functioning of the whole--a nearly impossible guessing game
for even the most experienced <ENAMEX TYPE="PER_DESC">programmers</ENAMEX>. For this reason, releasing the
Windows source code might not instantly erode <ENAMEX TYPE="ORGANIZATION">Microsoft</ENAMEX>'s dominance in PC
operating <ENAMEX TYPE="ORG_DESC">systems</ENAMEX> unless a great number of software <ENAMEX TYPE="PER_DESC">engineers</ENAMEX> applied
themselves to the effort. <ENAMEX TYPE="ORGANIZATION">Microsoft</ENAMEX> argues that releasing the source code would
be bad for <ENAMEX TYPE="PER_DESC">consumers</ENAMEX> because it would result in many incompatible versions of
Windows.

            So far, the results of releasing source code to the <ENAMEX TYPE="PER_DESC">public</ENAMEX> are mixed. It can
stir great creativity among <ENAMEX TYPE="PER_DESC">programmers</ENAMEX>, as the <ENAMEX TYPE="ORGANIZATION">Linux</ENAMEX> story illustrates. Or, it
can prove a disappointment. <ENAMEX TYPE="ORGANIZATION">Netscape</ENAMEX> made public the source code for its
<ENAMEX TYPE="PER_DESC">Navigator browser</ENAMEX> <TIMEX TYPE="DATE">a year</TIMEX> an <TIMEX TYPE="DATE">a half ago</TIMEX>, and most estimate that it will take at
least another <TIMEX TYPE="DATE">six months</TIMEX> for <ENAMEX TYPE="PER_DESC">programmers</ENAMEX> to create a new product with it. And a
<ENAMEX TYPE="ORGANIZATION">browser</ENAMEX>'s <ENAMEX TYPE="PER_DESC">source</ENAMEX> code is only a fraction of the size of that of an operating
system.

            Next question?

         
      
   
